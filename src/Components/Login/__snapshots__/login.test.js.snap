// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <section
          className="login-credentials"
        >
          <h2>
            Login
          </h2>
          <input
            className="user-name input-dimensions"
            placeholder="user name"
          />
          <input
            className="email input-dimensions"
            placeholder="email"
          />
          <Link
            replace={false}
            to="/main"
          >
            <button>
              Submit
            </button>
          </Link>
        </section>,
        <Route
          exact={true}
          path="/main"
          render={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              Login
            </h2>,
            <input
              className="user-name input-dimensions"
              placeholder="user name"
            />,
            <input
              className="email input-dimensions"
              placeholder="email"
            />,
            <Link
              replace={false}
              to="/main"
            >
              <button>
                Submit
              </button>
            </Link>,
          ],
          "className": "login-credentials",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
            },
            "ref": null,
            "rendered": "Login",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "user-name input-dimensions",
              "placeholder": "user name",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "email input-dimensions",
              "placeholder": "email",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button>
                Submit
              </button>,
              "replace": false,
              "to": "/main",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
            "type": [Function],
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/main",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <section
            className="login-credentials"
          >
            <h2>
              Login
            </h2>
            <input
              className="user-name input-dimensions"
              placeholder="user name"
            />
            <input
              className="email input-dimensions"
              placeholder="email"
            />
            <Link
              replace={false}
              to="/main"
            >
              <button>
                Submit
              </button>
            </Link>
          </section>,
          <Route
            exact={true}
            path="/main"
            render={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2>
                Login
              </h2>,
              <input
                className="user-name input-dimensions"
                placeholder="user name"
              />,
              <input
                className="email input-dimensions"
                placeholder="email"
              />,
              <Link
                replace={false}
                to="/main"
              >
                <button>
                  Submit
                </button>
              </Link>,
            ],
            "className": "login-credentials",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
              },
              "ref": null,
              "rendered": "Login",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "user-name input-dimensions",
                "placeholder": "user name",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "email input-dimensions",
                "placeholder": "email",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button>
                  Submit
                </button>,
                "replace": false,
                "to": "/main",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/main",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
